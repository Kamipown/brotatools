@use './typography.scss';

@tailwind base;
@tailwind components;
@tailwind utilities;

#root {
  height: 100vh;
  overflow: auto;
}

:focus {
  outline: none;
}

// Input autofill
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  transition: background-color 5000s ease-in-out 0s;
}

// Scrollbars
* {
  scrollbar-width: thin;
  scrollbar-color: #1f2937 #030712;
}
*::-webkit-scrollbar {
  width: 14px;
  height: 14px;
}
*::-webkit-scrollbar-thumb {
  border-radius: 6px;
  border: 4px solid;
}
*::-webkit-scrollbar-track,
*::-webkit-scrollbar-corner {
  background: #030712;
}
*::-webkit-scrollbar-thumb {
  background-color: #1f2937;
  border-color: #030712;
}
*::-webkit-scrollbar-thumb:hover {
  background-color: #1f2937;
}

.green {
  color: #22c55e;
}
.red {
  color: #ef4444;
}
.purple {
  color: #a855f7;
}
.small {
  font-size: 14px;
  opacity: 0.7;
}
.material {
  display: inline-block;
  vertical-align: top;
  width: 24px;
  height: 24px;
  background-size: 24px 24px;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-image: url('/materials.png');
}
.stat {
  position: relative;
  display: inline-block;
  vertical-align: top;
  width: 16px;
  height: 24px;
  $size: calc(16px / 60);
  &::after {
    content: '';
    position: absolute;
    top: 4px;
    background-image: url('/stats.png');
    width: 16px;
    height: 16px;
    background-size: calc(300 * $size) calc(240 * $size);
    background-repeat: no-repeat;
  }
  &.armor::after {
    background-position: calc(0 * #{-$size}) calc(0 * #{-$size});
  }
  &.attackSpeed::after {
    background-position: calc(60 * #{-$size}) calc(0 * #{-$size});
  }
  &.critChance::after {
    background-position: calc(120 * #{-$size}) calc(0 * #{-$size});
  }
  &.curse::after {
    background-position: calc(180 * #{-$size}) calc(0 * #{-$size});
  }
  &.rangedDamage::after {
    background-position: calc(240 * #{-$size}) calc(0 * #{-$size});
  }
  &.damage::after {
    background-position: calc(0 * #{-$size}) calc(60 * #{-$size});
  }
  &.dodge::after {
    background-position: calc(60 * #{-$size}) calc(60 * #{-$size});
  }
  &.elementalDamage::after {
    background-position: calc(120 * #{-$size}) calc(60 * #{-$size});
  }
  &.engineering::after {
    background-position: calc(180 * #{-$size}) calc(60 * #{-$size});
  }
  &.speed::after {
    background-position: calc(240 * #{-$size}) calc(60 * #{-$size});
  }
  &.hpRegeneration::after {
    background-position: calc(0 * #{-$size}) calc(120 * #{-$size});
  }
  &.harvesting::after {
    background-position: calc(60 * #{-$size}) calc(120 * #{-$size});
  }
  &.level::after {
    background-position: calc(120 * #{-$size}) calc(120 * #{-$size});
  }
  &.lifeSteal::after {
    background-position: calc(180 * #{-$size}) calc(120 * #{-$size});
  }
  &.luck::after {
    background-position: calc(0 * #{-$size}) calc(180 * #{-$size});
  }
  &.maxHP::after {
    background-position: calc(60 * #{-$size}) calc(180 * #{-$size});
  }
  &.meleeDamage::after {
    background-position: calc(120 * #{-$size}) calc(180 * #{-$size});
  }
  &.range::after {
    background-position: calc(180 * #{-$size}) calc(180 * #{-$size});
  }
}
